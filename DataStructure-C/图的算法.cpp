#include<stdio.h>
#include<stdlib.h>

/*假设图采用邻接表存储，设计算法判断图是否连通
	使用深度优先遍历方法
		1.先给visited[]数组置初值为0
		2.然后从0顶点开始遍历该图
		3.在一次遍历后，若所有的顶点visited[i]均为1，则连通。
*/
//代码见图的邻接表表示


/*假设图G采用邻接表存储，设计一个算法判断顶点u到v之间是否有简单路径
	使用深度优先遍历的思路来设计求解算法HasaPath(G,u,v)
		1.先置全局visited数组中所有的值为0
		2.从顶点u出发进行深度优先遍历，置visited[u]=1；
	找到u的一个未访问的邻接点u1，置visited[u1]=1；找到
	顶点u1的一个未访问过的邻接点u2...以此类推
		3.当找到某个未访问的邻接点un = v时，说明顶点u到v有一条简单路径
	返回1；当整个遍历中都没有找到v，说明u和v之间没有简单路径，返回0。
*/
//代码见图的邻接表表示
